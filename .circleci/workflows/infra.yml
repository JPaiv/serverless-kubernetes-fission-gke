version: 2.1

workflows:
  deploy:
    jobs:
      - deploy-dev:
          filters:
            branches:
              - master

jobs:
  deploy-dev:
    executor: default-executor
    environment:
      ENV: dev
      PROJECT_NAME: dev-kubernetes-serverless
      CLUSTER_NAME: serverless-kubernetes-cluster
    working_directory: ~/
    steps:
      - deploy:
          gcloud_service_key: ${GCLOUD_SERVICE_KEY}
          google_project_id: ${GOOGLE_PROJECT_ID}

executors:
  default-executor:
    docker:
      - image: google/cloud-sdk:alpine
    environment:
      CLOUDSDK_CORE_DISABLE_PROMPTS: "1"
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcloud-service-key.json
      TF_IN_AUTOMATION: "true"

commands:
  deploy:
    description: Update infra
    parameters:
      gcloud_service_key:
        type: ${GCLOUD_SERVICE_KEY}
      google_project_id:
        type: ${GOOGLE_PROJECT_ID}
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Authenticate Google Cloud client
          command: |
            echo ${<< parameters.gcloud_service_key >>} > ${GOOGLE_APPLICATION_CREDENTIALS}
            gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
            gcloud config set project ${<< parameters.google_project_id >>}
      - run:
          name: Initialize Terraform
          command: |
            export SERVICE_NAME=default/gke-$ENV
            export K8S_BACKEND_SERVICE_NAME=$(gcloud compute backend-services list  \
              --format=json | jq '.[] | select(.description | fromjson | ."kubernetes.io/service-name" == $service_name) | .name' \
              --arg service_name "$SERVICE_NAME" --raw-output)
            envsubst < ./terraform.tfvars.template > ./terraform.tfvars
            terraform init -input=false
            terraform validate
            terraform refresh
      - run:
          name: Initialize, validate and apply Terraform
          command: |
            terraform plan -out=/tmp/tfplan -input=false
            terraform apply -input=false -auto-approve /tmp/tfplan
            terraform refresh
  serverless:
    description: Update serverless fission.io
    parameters:
      gcloud_service_key:
        type: ${GCLOUD_SERVICE_KEY}
      google_project_id:
        type: ${GOOGLE_PROJECT_ID}
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Authenticate Google Cloud client
          command: |
            echo ${<< parameters.gcloud_service_key >>} > ${GOOGLE_APPLICATION_CREDENTIALS}
            gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
            gcloud config set project ${<< parameters.google_project_id >>}
      - run:
          name: Initialize GCP
          command: |
            gcloud container clusters get-credentials ${ENV}-${CLUSTER_NAME}
      - run:
          name: Deploy functions
          working_directory: ./src
          command: python3 deployment.py
