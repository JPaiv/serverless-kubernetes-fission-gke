version: 2.1

workflows:
  test-build-deploy:
    jobs:
      - test

      # Push to any non-master branch triggers deployment to `dev` environment:
      - deploy-dev:
          requires:
            - test
          filters:
            branches:
              ignore:
                - master

      # Uncomment the following blocks to enable test and production environments:

      # Push to master branch triggers deployment to `test` environment:
      # - deploy-test:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: master

      # Push to master branch triggers deployment to `production` environment, with a further manual approval step in CircleCI UI:
      # - deploy-prod:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: master
      #     type: approval

jobs:
  test:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "app/yarn.lock" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: cd app && yarn install
      - save_cache:
          paths:
            - ~/.cache/yarn
            - app/node_modules
          key: v1-dependencies-{{ checksum "app/yarn.lock" }}
      - run:
          name: Run tests
          command: cd app && yarn test

  deploy-dev:
    executor: default-executor
    environment:
      ENV: dev
      PROJECT_NAME: gke-dev
    working_directory: ~/project/terraform/dev
    steps:
      - deploy:
          gcloud_service_key: GCLOUD_SERVICE_KEY_DEV
          google_project_id: GOOGLE_PROJECT_ID_DEV

  deploy-test:
    executor: default-executor
    environment:
      ENV: test
      PROJECT_NAME: gke-test
    working_directory: ~/project/terraform/test
    steps:
      - deploy:
          gcloud_service_key: ${GCP_SERVICE_KEY}
          google_project_id: ${GCP_PROJECT_ID}

  deploy-prod:
    executor: default-executor
    environment:
      ENV: prod
      PROJECT_NAME: gke-prod
    working_directory: ~/project/terraform/prod
    steps:
      - deploy:
          gcloud_service_key: GCLOUD_SERVICE_KEY_PROD
          google_project_id: GOOGLE_PROJECT_ID_PROD


executors:
  default-executor:
    docker:
      - image: google/cloud-sdk:alpine
    environment:
      CLOUDSDK_CORE_DISABLE_PROMPTS: "1"
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcloud-service-key.json
      TF_IN_AUTOMATION: "true"